import 'dart:io';

import 'package:path/path.dart';
import 'package:prisma_dart/src/binaries/binaries.dart';

void writeUpackEngineCode(String name, String platform, String form, String toDir,String fileName) {
  final dir = Directory(toDir);
  dir.createSync(recursive: true);
  final packed = join(toDir,name);
  final initFunction = getInitCode(name, platform,packed);
  File(join(toDir,fileName)).writeAsStringSync(initFunction);
  copyEngineFile( form,packed );
}

String getInitCode(String name, String platfrom,String enginePath) {
  //TODO make sure enginePath is relative file path
  String constraints = "";
  if (platfrom == "linux") {
    if (name == "linux") {
      constraints = """
// +build !debian_openssl_1_0_x
// +build !debian_openssl_1_1_x
// +build !rhel_openssl_1_0_x
// +build !rhel_openssl_1_1_x
""";
    } else {
      constraints = "// +build linux";
    }
  }
  final content = """// Code generated by Prisma Client Go. DO NOT EDIT.
//nolint
// +build !codeanalysis
// +build $name
// +build !prisma_ignore
$constraints

import 'package:prisma_dart/src/binaries/unpack/unpack.dart';


void init() {
	copyEngineToUnpackTmp("$enginePath", "$name", "$engineVersion");
}
""";
  return content;
}

// void writeAsset(String file) {
// final f=File(file);
// }


copyEngineFile(String from , String to){
  File(from).copySync(to);
}